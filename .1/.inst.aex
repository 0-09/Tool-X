# Tool Name :- Tool-X
# Author :- Rajkumar dusad
# Date :- 1/11/2017
# Powered By :- Aex Software's

import os
import sys
from time import sleep

if os.path.exists("/data/data/com.termux/files/usr/bin/pkg"):
    systm="termux"
    hpath="/data/data/com.termux/files/home/"
    bpath="/data/data/com.termux/files/usr/bin/"
elif os.path.exists("/usr/bin/apt"):
    if os.path.exists("/usr/lib/sudo"):
        systm="ubuntu"
        bpath="/usr/bin/"
        hpath="/home/"
    else:
        systm="debian"
        bpath="/usr/bin/"
        hpath="/home/"
elif os.path.exists("/bin/apt"):
    if os.path.exists("/usr/lib/sudo"):
        systm="ubuntu"
        bpath="/usr/bin/"
        hpath="/home/"
    else:
        systm="debian"
        bpath="/usr/bin/"
        hpath="/home/"

if os.path.exists("/data/data/com.termux/files/usr/bin/pkg"):
    pac="pkg"
elif os.path.exists("/usr/bin/apt"):
    if os.path.exists("/usr/lib/sudo"):
        pac="sudo apt-get"
    else:
        pac="apt-get"
elif os.path.exists("/bin/apt"):
    if os.path.exists("/usr/lib/sudo"):
        pac="sudo apt-get"
    else:
        pac="apt-get"

u=open("uip.aex","r")
userinput=u.read()
u.close()
p=open(userinput+".aex","r")
t=open(userinput+"tn.aex","r")
tf=open(userinput+"fn.aex","r")
re=open(userinput+"req.aex","r")
tl=open(userinput+"tl.aex","r")
path=p.read()
toolname=t.read()
toollang=tl.read()
toolfilename=tf.read()
req=re.read()
p.close()
t.close()
tf.close()
re.close()
tl.close()

def up():
    os.system(pac+" update")
    os.system(pac+" upgrade -y")

def py():
    if os.path.exists(bpath+"python"):
        print("\033[1;33m Done .....")
    else:
        os.system(pac+" install python -y")
        os.system(pac+" install python-pip -y")
        os.system(pac+" install pip -y")
        os.system(pac+" install python2 -y")
        os.system(pac+" install python2-pip -y")
        os.system(pac+" install python3 -y")
        os.system(pac+" install python3-pip -y")
        os.system(pac+" install python3-setuptools")
        os.system("easy_install3 pip")
    if os.path.exists(bpath+"python2"):
        print("\033[1;33m Done .....")
    else:
        os.system(pac+" install python -y")
        os.system(pac+" install python-pip -y")
        os.system(pac+" install pip -y")
        os.system(pac+" install python2 -y")
        os.system(pac+" install python2-pip -y")
        os.system(pac+" install python3 -y")
        os.system(pac+" install python3-pip -y")
        os.system(pac+" install python3-setuptools")
        os.system("easy_install3 pip")
    if os.path.exists(bpath+"python3"):
        print("\033[1;33m Done .....")
    else:
        os.system(pac+" install python -y")
        os.system(pac+" install python-pip -y")
        os.system(pac+" install pip -y")
        os.system(pac+" install python2 -y")
        os.system(pac+" install python2-pip -y")
        os.system(pac+" install python3 -y")
        os.system(pac+" install python3-pip -y")
        os.system(pac+" install python3-setuptools")
        os.system("easy_install3 pip")

def git():
    if os.path.exists(bpath+"git"):
        print("\033[1;33m Done .....")
    else:
        os.system(pac+" install git -y")

def perl():
    if os.path.exists(bpath+"perl"):
        print("\033[1;33m Done .....")
    else:
        os.system(pac+" install perl -y")

def ruby():
    if os.path.exists(bpath+"ruby"):
        print("\033[1;33m Done .....")
    else:
        os.system(pac+" install ruby -y")

def clang():
    if os.path.exists(bpath+"clang"):
        print("\033[1;33m Done .....")
    else:
        os.system(pac+" install clang -y")

def php():
    if os.path.exists(bpath+"php"):
        print("\033[1;33m Done .....")
    else:
        os.system(pac+" install php -y")
        os.system(pac+" install php5 -y")

def wget():
    if os.path.exists(bpath+"wget"):
        print("\033[1;33m Done .....")
    else:
        os.system(pac+" install wget -y")

def curl():
    if os.path.exists(bpath+"curl"):
        print("\033[1;33m Done .....")
    else:
        os.system(pac+" install curl -y")

def Upd():
  if systm=="termux":
	print("\033[1;33m")
	sys.stdout.write(open(".Toolo/.T0.aex").read())
	print("\033[1;32m")
	sys.stdout.write(open(".Toolo/.U.aex").read())
	print("\033[1;33m")
	sys.stdout.write(open(".Toolo/.T0.aex").read())
	print("\033[1;m")

  else:
	print("\033[1;33m")
	sys.stdout.write(open(".Toolo/.T0u.aex").read())
	print("\033[1;32m")
	sys.stdout.write(open(".Toolo/.Uu.aex").read())
	print("\033[1;33m")
	sys.stdout.write(open(".Toolo/.T0u.aex").read())
	print("\033[1;m")


def Aex():
	Aex=sys.exit()

def Ux():
	Ux=os.system("clear")

def proc():
  if systm=="termux":
    print("\033[1;33m\007")
    sys.stdout.write(open(".Toolo/.T0.aex").read())
    print("\033[1;32m")
    sys.stdout.write(open(".Toolo/.Ia.aex").read())
    print("\033[1;33m")
    sys.stdout.write(open(".Toolo/.T0.aex").read())
    print("\033[1;m")

  else:
    print("\033[1;33m\007")
    sys.stdout.write(open(".Toolo/.T0u.aex").read())
    print("\033[1;32m")
    sys.stdout.write(open(".Toolo/.Iau.aex").read())
    print("\033[1;33m")
    sys.stdout.write(open(".Toolo/.T0u.aex").read())
    print("\033[1;m")



def Er():
  if systm=="termux":
	print("\033[1;31m\007")
	sys.stdout.write(open(".Toolo/.er.aex").read())
	print("\033[1;32m")
	sys.stdout.write(open(".Toolo/.er0.aex").read())
	print("\033[1;31m")
	sys.stdout.write(open(".Toolo/.er.aex").read())
	print("\033[1;m")
	sleep(1)

  else:
	print("\033[1;31m\007")
	sys.stdout.write(open(".Toolo/.eru.aex").read())
	print("\033[1;32m")
	sys.stdout.write(open(".Toolo/.er0u.aex").read())
	print("\033[1;31m")
	sys.stdout.write(open(".Toolo/.eru.aex").read())
	print("\033[1;m")
	sleep(1)


def Req():
	Ux()
	proc()
	if req=="py":
		git()
		py()
	elif req=="php":
		git()
		php()
	elif req=="perl":
		git()
		perl()
	elif req=="ruby":
		git()
		ruby()
	elif req=="clang":
		git()
		clang()



def Notinst():
    if os.path.exists(hpath+toolname):
        Ux()
        install()
    else:
        Ux()
        if systm=="termux":
            print ("""\033[1;33m\007


          _____           _    __  __
         |_   _|__   ___ | |   \ \/ /
           | |/ _ \ / _ \| |____\  /
           | | (_) | (_) | |____/  \     
           |_|\___/ \___/|_|   /_/\_\ \033[1;91mv2.0


\033[1;36m ===============================================\033[1;m
\033[1;33m|           Install Best Hacking Tool           |
\033[1;36m ===============================================\033[1;m

\033[1;31m  [ + ]  \033[1;31mWe can't install this tool.\033[1;m
\033[1;31m  [ + ]  \033[1;31mAre you offline?\033[1;m
\033[1;31m  [ + ]  \033[1;31mIf you are online.\033[1;m
\033[1;31m  [ + ]  \033[1;31mThen the server is down.\033[1;m
\033[1;31m  [ + ]  \033[1;31mPlease try again after some time.
\033[1;36m_________________________________________________
=================================================\033[00m
""")
        else:
            print ("""\033[1;33m\007


               _____           _    __  __
              |_   _|__   ___ | |   \ \/ /
                | |/ _ \ / _ \| |____\  /
                | | (_) | (_) | |____/  \     
                |_|\___/ \___/|_|   /_/\_\ \033[1;31mv2.0


\033[1;36m =========================================================
\033[1;33m|               \033[1;33m Install Best Hacking Tool.               \033[1;33m|
\033[1;36m =========================================================

\033[1;31m     [ + ]  \033[1;31mWe can't install this tool.
\033[1;31m     [ + ]  \033[1;31mAre you offline?
\033[1;31m     [ + ]  \033[1;31mIf you are online.
\033[1;31m     [ + ]  \033[1;31mThen the server is down.
\033[1;31m     [ + ]  \033[1;31mPlease try again after some time.
\033[1;36m___________________________________________________________
===========================================================\033[00m
""")
        Toolo = raw_input("\033[1;33m Press any key to continue >>> \033[00m")
        if Toolo == "":
            Aex()
        else:
            Aex()


def inst():
	Ux()
	Req()
	os.system("cd ~/ && git clone "+path)
	os.system("cd ~/"+toolname+" && chmod +x *.*")
	if os.path.exists(hpath+toolname+"/requirements.txt"):
		os.system("cd ~/"+toolname+" && pip install -r requirements.txt")
		os.system("cd ~/"+toolname+" && pip2 install -r requirements.txt")
		os.system("cd ~/"+toolname+" && pip3 install -r requirements.txt")
	Ux()
	if os.path.exists(hpath+toolname+"/requirement.txt"):
		os.system("cd ~/"+toolname+" && pip install -r requirement.txt")
		os.system("cd ~/"+toolname+" && pip2 install -r requirement.txt")
		os.system("cd ~/"+toolname+" && pip3 install -r requirement.txt")
	Ux()
	if os.path.exists(hpath+toolname):
		Ux()
		install()
	else:
		Ux()
		Notinst()



def install():
 while True:
		while os.path.exists(hpath+toolname):
			Ux()
			if systm=="termux":
				print ('''\033[1;33m\007


          _____           _    __  __
         |_   _|__   ___ | |   \ \/ /
           | |/ _ \ / _ \| |____\  /
           | | (_) | (_) | |____/  \     
           |_|\___/ \___/|_|   /_/\_\ \033[1;91mv2.0


\033[1;36m ===============================================
\033[1;33m|           Install Best Hacking Tool           |
\033[1;36m ===============================================

\033[1;33m  [ + ]  \033[1;32mInstalled successfully. !!!
\033[1;33m  [ + ]  \033[1;32mTo run '''+toolname+'''.
\033[1;33m  [ + ]  \033[1;32mGo to \033[00m'''+toolname+'''\033[01;32m folder.
\033[1;33m  [ + ]  \033[1;32mAnd type \033[00m'''+toollang+''' '''+toolfilename+'''
\033[1;36m_________________________________________________
=================================================\033[00m
''')
			else:
				print ('''\033[1;33m\007


               _____           _    __  __
              |_   _|__   ___ | |   \ \/ /
                | |/ _ \ / _ \| |____\  /
                | | (_) | (_) | |____/  \     
                |_|\___/ \___/|_|   /_/\_\ \033[1;31mv2.0


\033[1;36m =========================================================
\033[1;33m|               \033[1;33m Install Best Hacking Tool.               \033[1;33m|
\033[1;36m =========================================================

\033[1;33m     [ + ]  \033[1;32mInstalled successfully. !!!
\033[1;33m     [ + ]  \033[1;32mTo run '''+toolname+'''.
\033[1;33m     [ + ]  \033[1;32mGo to \033[00m'''+toolname+'''\033[01;32m folder.
\033[1;33m     [ + ]  \033[1;32mAnd type \033[00m'''+toollang+''' '''+toolfilename+'''
\033[1;36m___________________________________________________________
===========================================================\033[00m
''')
			Toolo = raw_input("\033[1;33m Press any key to continue >>> \033[00m")
			if Toolo == "":
				Aex()
			else:
				Aex()

		else:
			inst()



def Open():
 while True:

		while os.path.exists(hpath+toolname):
			Ux()
			if systm=="termux":
				print ("""\033[1;33m



          _____           _    __  __
         |_   _|__   ___ | |   \ \/ /
           | |/ _ \ / _ \| |____\  /
           | | (_) | (_) | |____/  \     
           |_|\___/ \___/|_|   /_/\_\ \033[1;91mv2.0


\033[1;36m ===============================================
\033[1;33m|           Install Best Hacking Tool           |
\033[1;36m ===============================================

\033[1;33m [+] \033[1;32mSorry. !!!
\033[1;33m [+] \033[1;32m"""+toolname+""" is already Installed. !!!
\033[1;36m_________________________________________________
=================================================\033[00m
""")
			else:
				print ("""\033[1;33m



               _____           _    __  __
              |_   _|__   ___ | |   \ \/ /
                | |/ _ \ / _ \| |____\  /
                | | (_) | (_) | |____/  \     
                |_|\___/ \___/|_|   /_/\_\ \033[1;31mv2.0


\033[1;36m =========================================================
\033[1;33m|               \033[1;33m Install Best Hacking Tool.               \033[1;33m|
\033[1;36m =========================================================

\033[1;33m   [+] \033[1;32mSorry. !!!
\033[1;33m   [+] \033[1;32m"""+toolname+""" is already Installed. !!!
\033[1;36m___________________________________________________________
===========================================================\033[00m
""")

			Toolo = raw_input("\033[1;32m Press Y to update it. [Y/n] >>> \033[00m")
			if Toolo == "y" or Toolo == "Y":
				Ux()
				Upd()
				Ux()
				os.system("cd && rm -rf "+toolname)
				Ux()
				install()

			elif Toolo == "n" or Toolo == "N":
				Aex()

			else:
				Er()
				Open()

		else:
			install()



def Tool_X():
	try:
		Open()
		Ux()
		Aex()

	except KeyboardInterrupt:
		Ux()
		Aex()
Tool_X()
